# NOTE: https://gist.github.com/bbqtd/a4ac060d6f6b9ea6fe3aabe735aa9d95 macos install tmux-256color
#set -g default-terminal "tmux-256color"
set -g default-terminal "xterm-256color"
#set -ga terminal-overrides ",*256col*:Tc"
set -ga terminal-overrides ",xterm-256color:Tc"
# set -g default-terminal "tmux-256color"
# set-option -a terminal-overrides ",*256col*:RGB"
# set-option -sa terminal-features ',tmux-256color:RGB'
# Check if there is a current session before turning off the status bar


set -g status on
set-option -g status-position top


# action key
unbind C-b
set -g prefix C-t

setw -g xterm-keys on
set -s escape-time 0
set -sg repeat-time 300
set -s focus-events on
set -g mouse on
set -sg exit-empty on

set -q -g status-utf8 on
setw -q -g utf8 on

set -g visual-activity off
setw -g monitor-activity off
setw -g monitor-bell off

set -g history-limit 10000

# bind t send-key C-t
# Reload settings
bind r source-file ~/.config/tmux/tmux.conf \; display "Reloaded!"

# display
set -g base-index 1
setw -g pane-base-index 1

setw -g automatic-rename on
set -g renumber-windows on

# allow the title bar to adapt to whatever host you connect to
set -g set-titles on
set -g set-titles-string "#T"

set -g display-panes-time 2000
set -g display-time 2000

set -g status-interval 1

# create session
bind -n M-s new-session

# window management
bind -n M-w new-window -c "#{pane_current_path}"
# break pane to window
bind -n M-b break-pane
# close self pane
bind -n M-c kill-pane
# close other pane
bind -n M-o kill-pane -a
# close window
bind -n M-q kill-window
# close other window
bind -n M-e kill-window -a

#window navigation
unbind n
unbind p
unbind 1
unbind 2
unbind 3
unbind 4
unbind 5
unbind 6
unbind 7
unbind 8 
unbind 9
unbind 0
bind -n M-h previous-window
bind -n M-l next-window

# rebind split window
unbind %
bind | split-window -h

unbind '"'
bind \_ split-window -v

bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9

bind -n M-! join-pane -t :1
bind -n M-@ join-pane -t :2
bind -n 'M-#' join-pane -t :3
bind -n 'M-$' join-pane -t :4
bind -n M-% join-pane -t :5
bind -n M-^ join-pane -t :6
bind -n M-& join-pane -t :7
bind -n M-* join-pane -t :8
bind -n M-( join-pane -t :9

bind -r m resize-pane -Z

# pane navigation
bind 1 select-pane -t:.1
bind 2 select-pane -t:.2
bind 3 select-pane -t:.3
bind 4 select-pane -t:.4
bind 5 select-pane -t:.5
bind 6 select-pane -t:.6
bind 7 select-pane -t:.7
bind 8 select-pane -t:.8
bind 9 select-pane -t:.9
bind 0 select-pane -t:.10
bind > swap-pane -D
bind < swap-pane -U
bind -n M-Space next-layout


bind W choose-tree -Z
bind H choose-tree 'move-pane -v -s "%%"'
bind V choose-tree 'move-pane -h -s "%%"'

# set -g status-keys emacs
set -g mode-keys vi


bind v copy-mode

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind -T copy-mode-vi h send-keys -X cursor-left
bind -T copy-mode-vi l send-keys -X cursor-right
bind -T copy-mode-vi k send-keys -X cursor-up
bind -T copy-mode-vi j send-keys -X cursor-down
bind -T copy-mode-vi e send-keys -X next-word-end
bind -T copy-mode-vi K send-keys -N 5 -X cursor-up
bind -T copy-mode-vi J send-keys -N 5 -X cursor-down
bind -T copy-mode-vi H send-keys -X start-of-line
bind -T copy-mode-vi L send-keys -X end-of-line
bind -T copy-mode-vi Y send-keys -X copy-end-of-line
bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind -T copy-mode-vi = send-keys -X search-again
bind -T copy-mode-vi = send-keys -X search-reverse

bind b list-buffers
bind p paste-buffer

set -g set-clipboard on

# Open current directory
bind o run-shell "open #{pane_current_path}"

#### tpm 
# NOTE: git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
set -g @plugin 'tmux-plugins/tpm'
## keybindings
# prefix C-I 安装插件
# prefix C-U 更新
## options
# @plugin <plugin_name> 管理插件

#### THEME
set -g @plugin 'catppuccin/tmux' 
set -g @catppuccin_flavour 'mocha' # or frappe, macchiato, mocha
# options
set -g @catppuccin_window_left_separator "█"
set -g @catppuccin_window_right_separator "█ "
set -g @catppuccin_window_number_position "right"
set -g @catppuccin_window_middle_separator "  █"
set -g @catppuccin_window_default_fill "number"
set -g @catppuccin_window_current_fill "number"
set -g @catppuccin_window_current_text "#{pane_current_path}"
set -g @catppuccin_status_modules_right "application session user date_time"
set -g @catppuccin_status_left_separator  ""
set -g @catppuccin_status_right_separator " █"
set -g @catppuccin_status_right_separator_inverse "yes"
set -g @catppuccin_status_fill "all"
set -g @catppuccin_status_connect_separator "no"


#### tmux-resurrect/tmux-continuum
#要求使用 systemd作为启动时第一个进程
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
# keybindings
# prefix C-s save
# prefix C-r restore
# options
set -g status on
# 自动保存和恢复窗格的内容
set -g @resurrect-capture-pane-contents 'on'
# 启动时自动打开tmux
set -g @continuum-boot on
# 设置启动的终端仿真器
#set -g @continuum-boot-options 'alacritty, fullscreen'
# 设置启动tmux服务器的命令，默认为new-session -d
#set -g @continuum-systemd-start-cmd '' 
# 设置保存的间隔 0 为自动保存
set -g @continuum-save-interval '15'
# 打开会禁用自动恢复 ~/tmux_no_auto_restore(为了确保不会自动还原)
set -g @continuum-restore 'off' 
# 如果要还原以前的状态，去resurrect目录下查找，并 ln  -sf <want-file> last(最后一次的存档文件，覆盖掉它) 

#### tmux-copycat
set -g @plugin 'tmux-plugins/tmux-copycat'
## options
set -g @copycat_search '/'
set -g @copycat_next 'n'
set -g @copycat_prev 'N'
set -g @copycat_file_search 'C-f'
set -g @copycat_url_search 'C-u'
set -g @copycat_digit_search 'C-d'
set -g @copycat_ip_search 'C-a'

#### vim-tmux-navigator
set -g @plugin 'christoomey/vim-tmux-navigator'

#### tmux.nvim 
#set -g @plugin 'aserowy/tmux.nvim'

run '~/.tmux/plugins/tpm/tpm'
